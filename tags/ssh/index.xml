<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ssh on Ibiza</title><link>http://kimmj.github.io/tags/ssh/</link><description>Recent content in ssh on Ibiza</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 15 Feb 2020 15:48:57 +0900</lastBuildDate><atom:link href="http://kimmj.github.io/tags/ssh/index.xml" rel="self" type="application/rss+xml"/><item><title>password 없이 ssh 접속하기</title><link>http://kimmj.github.io/ubuntu/ssh-without-password/</link><pubDate>Sat, 15 Feb 2020 15:48:57 +0900</pubDate><guid>http://kimmj.github.io/ubuntu/ssh-without-password/</guid><description>자주 접속하는 서버에 패스워드를 항상 입력하는 것은 귀찮은 일이 될 것입니다.
여기에서는 ssh key를 생성하고, 이를 이용하여 인증을 해 password를 입력하지 않는 방법을 알아볼 것입니다.
ssh-keygen을 통한 ssh key 생성 ssh 접속을 할 때 password를 입력했던 것처럼, 항상 ssh 접속을 위해서는 인증을 위한 key가 필요합니다.
인증에 사용할 키를 ssh-keygen으로 생성하는 방법은 다음과 같습니다.
ssh-keygen -t rsa -b 4096 -t는 rsa 알고리즘을 통해 key를 생성하겠다는 의미이며, -b는 key의 사이즈를 정해주는 것입니다.</description></item><item><title>Gateway를 이용하여 SSH 접속하기</title><link>http://kimmj.github.io/ubuntu/ssh-with-jump/</link><pubDate>Wed, 12 Feb 2020 22:08:16 +0900</pubDate><guid>http://kimmj.github.io/ubuntu/ssh-with-jump/</guid><description>ssh cli 이용하는 방법 -J 옵션을 이용한다.
ssh user@server -J user2@server2 두개 이상의 경우 ,로 구분한다.
예: user2@server2로 접속 후 user3@server3로 접속한 뒤 user@server로 접속해야 할 경우
ssh user@server -J user2@server2,user3@server3 이 상황에서 ssh-copy-id를 이용해 패스워드를 입력하지 않고 이동하려면
localuser@localhost $ ssh-copy-id user2@server2 localuser@localhost $ ssh user2@server2 user2@server2 $ ssh-copy-id user3@server3 user2@server2 $ ssh user3@server3 user3@server3 $ ssh-copy-id user@server 이후 ssh를 통해 진입하면 패스워드 없이 접속 가능.
만약 port가 필요한 경우 server:port 형태로 입력</description></item></channel></rss>